@model DMS.Models.ViewModel.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<div class="container">
    <h2>@ViewBag.Title.</h2>
    @if (!String.IsNullOrEmpty(ViewBag.Role))
    {
        <div class="alert alert-info">
            <button type="button" class="close" data-dismiss="alert">
                <i class="ace-icon fa fa-times"></i>
            </button>
            <strong>Role Based System!</strong>
            @ViewBag.Role
            <br>
        </div>
    }

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Create a new account.</h4>
        <hr />
       // @Html.ValidationSummary()
        <div class="form-group">
            @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label"})
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", required = "required" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-4">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", required = "required" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-4">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", required = "required" })
            </div>
        </div>
        
        <div class="form-group">
                 @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
                <div class="col-md-4">                                       
                   @Html.DropDownListFor(model => model.Gender, Enum.GetNames(typeof(DataModel.Enums.Gender)).Select(e => new SelectListItem { Text = e }), new { @class = "form-control" })
                </div>
            </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", required = "required" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Address, new { @class = "col-md-2 control-label" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Address, new { @class = "form-control", required = "required" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Phone, new { @class = "col-md-2 control-label" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", required = "required" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.NID, new { @class = "col-md-2 control-label" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.NID, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" class="btn btn-default" value="Register" />
            </div>
        </div>
    }
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
