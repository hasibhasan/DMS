@model IEnumerable<DataModel.Models.ViewModel.UserManagementViewModel>
@Html.Partial("_Sidebar")
<div class="main-content">
    <div class="main-content-inner">
        <div class="page-content">
            <div style="padding:10px;">
                @Html.ActionLink("Create New", "Create")
            </div>
           
            <div class="table-header">
                Results for "User List"
            </div>
            <table class="table table-striped table-bordered table-hover" id="dynamic-table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.UserName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Gender)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Address)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Phone)
                        </th>                        
                        <th>
                            @Html.DisplayNameFor(model => model.Rolelist)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DateOfBirth)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IsAproved)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IsLocked)
                        </th>
                        <th>

                        </th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.UserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Gender)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Address)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Phone)
                            </td>                            
                            <td>
                                @Html.DisplayFor(modelItem => item.Rolelist)
                            </td>
                            <td>
                                @Html.ValueFor(modelItem => item.DateOfBirth,"{0:dd MMM,yyyy}")
                            </td>
                            <td>
                                @if (item.IsAproved)
                                {
                                    <span class="label label-sm label-success">Approved</span>
                                }
                                else
                                {
                                    <span class="label label-sm label-warning">Not Approved</span>
                                }
                            </td>
                            <td>
                                @if (item.IsLocked)
                                {
                                    <span class="label label-sm label-danger">Locked</span>
                                }
                                else
                                {
                                    <span class="label label-sm label-success">Not Locked</span>
                                }
                                
                            </td>
                            <td>
                                @if(item.IsLocked)
                                {
                                    @Html.ActionLink("Unlock", "UnlockUserAccount", new { id = item.Id }) 
                                }
                                else{
                                    @Html.ActionLink("Lock", "LockUserAccount", new { id = item.Id })    
                                }|                      
                                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                @Html.ActionLink("Delete", "DeleteConfirmed", new { id = item.Id }, new { onclick = "return confirm('Are you sure you wish to delete this article?');" })

                            </td>
                        </tr>
                    }
                </tbody>
            </table>

</div>
</div>
</div>

@section Scripts {
<script type="text/javascript">
    $(document).ready(function () {
        //initiate dataTables plugin
        var oTable1 =
        $('#dynamic-table')
        //.wrap("<div class='dataTables_borderWrap' />")   //if you are applying horizontal scrolling (sScrollX)
        .dataTable({
            bAutoWidth: false,
            
            "aaSorting": []
            //,
            //"sScrollY": "200px",
            //"bPaginate": false,

            //"sScrollX": "100%",
            //"sScrollXInner": "120%",
            //"bScrollCollapse": true,
            //Note: if you are applying horizontal scrolling (sScrollX) on a ".table-bordered"
            //you may want to wrap the table inside a "div.dataTables_borderWrap" element

            //"iDisplayLength": 50
        });
        //oTable1.fnAdjustColumnSizing();

        //ColVis extension
        var colvis = new $.fn.dataTable.ColVis(oTable1, {
            "buttonText": "<i class='fa fa-search'></i>",
            "aiExclude": [0, 6],
            "bShowAll": true,
            //"bRestore": true,
            "sAlign": "right",
            "fnLabel": function (i, title, th) {
                return $(th).text();//remove icons, etc
            }

        });

        //select/deselect all rows according to table header checkbox
        $('#dynamic-table > thead > tr > th input[type=checkbox]').eq(0).on('click', function () {
            var th_checked = this.checked;//checkbox inside "TH" table header

            $(this).closest('table').find('tbody > tr').each(function () {
                var row = this;
                if (th_checked) tableTools_obj.fnSelect(row);
                else tableTools_obj.fnDeselect(row);
            });
        });

    });
</script>
   
}

